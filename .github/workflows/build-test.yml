name: Build and Deploy to Sandbox

on:
  workflow_call:
    inputs:
      build-test: 
        description: Specify whether you would like to build the jar file or just run unit tests
        required: false
        type: string
        default: 'test'
      code-coverage-required:
        description: Specify whether code coverage is required for maven to succeed
        required: false
        type: boolean
        default: true


jobs:
  Run-Tests:
    runs-on: self-hosted
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
 #   - name: Cache dependencies
 #     uses: actions/cache@v3
 #     with:
 #       path: ~/.m2/repository
 #       key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
 #       restore-keys: |
 #         ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B clean test -DcodeCoverageRequired=${{inputs.code-coverage-required}} --file pom.xml
#      run: echo ${{GITHUB.ref_name}}
    
    
  Build-Package:
    if: ${{ inputs.build-test == 'build' }}
    needs: Run-Tests
    runs-on: self-hosted
    steps:
#    - name: Checkout this repo
#      uses: actions/checkout@v3
#    - name: Cache dependencies
#      uses: actions/cache@v3
#      with:
#        path: ~/.m2/repository
#        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#        restore-keys: |
#          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B package -DcodeCoverageRequired=${{inputs.code-coverage-required}} --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
#    - name: Upload artifact 
#      uses: actions/upload-artifact@v3
#      with:
#          name: artifacts
#          path: target/*.jar