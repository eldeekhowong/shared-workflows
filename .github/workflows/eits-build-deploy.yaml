name: EITS Build and Deploy Job

on:
  workflow_call:
    inputs:
      build-deploy: 
        description: Specify whether you would like to build the jar file or build and deploy
        required: false
        type: string
        default: 'build'
      code-coverage-required:
        description: Specify whether code coverage is required for the build to succeed
        required: false
        type: boolean
        default: true
      muleEnv:
        description: Mule environment to deploy to
        required: false
        type: string
        default: 'Development'
      branch:
        description: Specify branch to checkout
        required: false
        type: string
        default: ''


jobs:
  Checkout-Repo:
    runs-on: self-hosted
    steps:
    - name: Checkout this repo
      if: ${{ inputs.branch == '' }}
      uses: actions/checkout@v4
    - name: Checkout specific branch
      if: ${{ inputs.branch != '' }}
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Checkout EITS configuration settings
      uses: actions/checkout@v4
      with: 
        repository: "eldeekhowong/shared-workflows"
        path: "shared-workflows"
        sparse-checkout: |
          maven
          configuration

  Build-Artifact:
    if: ${{ inputs.build-deploy == 'build'}}
    needs: [Checkout-Repo]
    runs-on: self-hosted
    steps:
    - name: Build with Maven
      run: ${{vars.MVN_COMMAND}} clean package -DcodeCoverageRequired=${{inputs.code-coverage-required}} --file pom.xml


  Build-Deploy-Artifact:
    if: ${{ inputs.build-deploy == 'deploy' }}
    needs: [Checkout-Repo]
    runs-on: self-hosted
    steps:
    - name: Build and deploy to Artifactory
      run: ${{vars.MVN_COMMAND}} clean deploy -DskipTests -DcodeCoverageRequired=${{inputs.code-coverage-required}} --file pom.xml


  Tag-Artifact:
    if: ${{ inputs.build-deploy == 'deploy' }}
    needs: [Build-Deploy-Artifact]
    runs-on: self-hosted
    steps:
    - name: Extract artifact version
      id: extract-artifact-version
      run: |
        ARTIFACT_VERSION=$(cat target/version.txt)
        echo "Artifact Version: $ARTIFACT_VERSION"
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> "$GITHUB_OUTPUT"

        ARTIFACT_MAJOR_VERSION=$(echo $ARTIFACT_VERSION | cut -d '-' -f 1 | cut -d '.' -f 1)
        echo "Artifact Major Version: $ARTIFACT_MAJOR_VERSION"
        echo "ARTIFACT_MAJOR_VERSION=$ARTIFACT_MAJOR_VERSION" >> "$GITHUB_OUTPUT"
    - name: Tag with artifact version
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ steps.extract-artifact-version.outputs.ARTIFACT_VERSION }}',
            sha: context.sha
          })
    outputs:
      ARTIFACT_MAJOR_VERSION: ${{ steps.extract-artifact-version.outputs.ARTIFACT_MAJOR_VERSION }}

  Deploy-Artifact-Anypoint:
    if: ${{ inputs.build-deploy == 'deploy' }}
    needs: [Tag-Artifact]
    uses: eldeekhowong/shared-workflows/.github/workflows/eits-anypoint-deploy.yaml@main
    secrets: inherit
    with:
      muleEnv: ${{ inputs.muleEnv }}
      majorVersion: ${{ needs.Tag-Artifact.outputs.ARTIFACT_MAJOR_VERSION}}