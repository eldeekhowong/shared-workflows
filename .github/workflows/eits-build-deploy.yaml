name: EITS Build and Deploy Job

on:
  workflow_call:
    inputs:
      build-deploy: 
        description: Specify whether you would like to build the jar file or build and deploy
        required: false
        type: string
        default: 'build'
      code-coverage-required:
        description: Specify whether code coverage is required for the build to succeed
        required: false
        type: boolean
        default: true
      muleEnv:
        description: Mule environment to deploy to
        required: false
        type: string
        default: 'Development'
      branch:
        description: Specify branch to checkout
        required: false
        type: string
        default: ''


jobs:
  Checkout-Repo:
    runs-on: self-hosted
    steps:
    - name: Checkout this repo
      if: ${{ inputs.branch == '' }}
      uses: actions/checkout@v4
    - name: Checkout specific branch
      if: ${{ inputs.branch != '' }}
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - name: Checkout settings.xml
      uses: actions/checkout@v4
      with: 
        repository: "eldeekhowong/shared-workflows"
        path: "shared-workflows"
        sparse-checkout: "maven"
    - name: Checkout environment specific anypoint-runtime-settings.json
      uses: actions/checkout@v4
      with: 
        repository: "eldeekhowong/shared-workflows"
        path: "shared-workflows/configuration"
        sparse-checkout: ${{ inputs.muleEnv }}

  Build-Artifact:
    if: ${{ inputs.build-deploy == 'build'}}
    needs: [Checkout-Repo]
    runs-on: self-hosted
    steps:
    - name: Build with Maven
      run: ${{vars.MVN_COMMAND}} clean package -DcodeCoverageRequired=${{inputs.code-coverage-required}} --file pom.xml


  Build-Deploy-Artifact:
    if: ${{ inputs.build-deploy == 'deploy' }}
    needs: [Checkout-Repo]
    runs-on: self-hosted
    steps:
    - name: Build and deploy to Artifactory
      run: ${{vars.MVN_COMMAND}} clean deploy -DskipTests -DcodeCoverageRequired=${{inputs.code-coverage-required}} --file pom.xml


  Tag-Artifact:
    if: ${{ inputs.build-deploy == 'deploy' }}
    needs: [Build-Deploy-Artifact]
    runs-on: self-hosted
    steps:
    - name: Extract artifact version
      id: extract-artifact-version
      run: |
        ARTIFACT_VERSION=$(cat target/version.txt)
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> "$GITHUB_OUTPUT"
    - name: Tag with artifact version
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ steps.extract-artifact-version.outputs.ARTIFACT_VERSION }}',
            sha: context.sha
          })


  Deploy-Artifact-Anypoint:
    if: ${{ inputs.build-deploy == 'deploy' }}
    needs: [Tag-Artifact]
    uses: eldeekhowong/shared-workflows/.github/workflows/eits-anypoint-deploy.yaml@main
    secrets: inherit
    with:
      muleEnv: ${{ inputs.muleEnv }}